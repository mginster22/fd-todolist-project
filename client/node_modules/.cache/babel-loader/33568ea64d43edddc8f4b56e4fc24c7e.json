{"ast":null,"code":"var _jsxFileName = \"/home/oem/Todo1/client/src/components/forms/TaskEditForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport styles from \"../../UserProfile/UserProfile.module.scss\";\nimport { updateUserTaskRequest } from \"../../../actions/taskCreators\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TaskEditForm = _ref => {\n  _s();\n\n  let {\n    userId,\n    task,\n    setModalTask\n  } = _ref;\n  const dispatch = useDispatch();\n\n  const onSubmit = (values, formikBag) => {\n    dispatch(updateUserTaskRequest({\n      values,\n      userId,\n      taskId: task.id\n    }));\n    setModalTask(false);\n  };\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        content: task.content\n      },\n      onSubmit: onSubmit,\n      children: formikProps => {\n        console.dir(formikProps);\n        return /*#__PURE__*/_jsxDEV(Form, {\n          className: styles.task_edit_form,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"content\",\n            className: styles.content,\n            component: \"textarea\",\n            placeholder: \"change your task...\",\n            onChange: e => formikProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"save\",\n            className: styles.add_task_button\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(TaskEditForm, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TaskEditForm;\nexport default TaskEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskEditForm\");","map":{"version":3,"names":["React","useEffect","Formik","Form","Field","styles","updateUserTaskRequest","useDispatch","TaskEditForm","userId","task","setModalTask","dispatch","onSubmit","values","formikBag","taskId","id","content","formikProps","console","dir","task_edit_form","e","add_task_button"],"sources":["/home/oem/Todo1/client/src/components/forms/TaskEditForm/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport styles from \"../../UserProfile/UserProfile.module.scss\";\n\nimport { updateUserTaskRequest } from \"../../../actions/taskCreators\";\nimport { useDispatch } from \"react-redux\";\n\nconst TaskEditForm = ({ userId, task, setModalTask }) => {\n  const dispatch = useDispatch();\n  const onSubmit = (values, formikBag) => {\n    dispatch(updateUserTaskRequest({ values, userId, taskId: task.id }));\n    setModalTask(false);\n  };\n  useEffect(() => {}, []);\n  return (\n    <>\n      <Formik\n        initialValues={{\n          content: task.content,\n        }}\n        onSubmit={onSubmit}\n      >\n        {(formikProps) => {\n          console.dir(formikProps);\n          return (\n            <Form className={styles.task_edit_form}>\n              <input\n                name=\"content\"\n                className={styles.content}\n                component=\"textarea\"\n                placeholder=\"change your task...\"\n                onChange={(e)=>formikProps()}\n              />\n\n              <input\n                type=\"submit\"\n                value=\"save\"\n                className={styles.add_task_button}\n              />\n            </Form>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nexport default TaskEditForm;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,SAASC,WAAT,QAA4B,aAA5B;;;;AAEA,MAAMC,YAAY,GAAG,QAAoC;EAAA;;EAAA,IAAnC;IAAEC,MAAF;IAAUC,IAAV;IAAgBC;EAAhB,CAAmC;EACvD,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;EACA,MAAMM,QAAQ,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuB;IACtCH,QAAQ,CAACN,qBAAqB,CAAC;MAAEQ,MAAF;MAAUL,MAAV;MAAkBO,MAAM,EAAEN,IAAI,CAACO;IAA/B,CAAD,CAAtB,CAAR;IACAN,YAAY,CAAC,KAAD,CAAZ;EACD,CAHD;;EAIAV,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;EACA,oBACE;IAAA,uBACE,QAAC,MAAD;MACE,aAAa,EAAE;QACbiB,OAAO,EAAER,IAAI,CAACQ;MADD,CADjB;MAIE,QAAQ,EAAEL,QAJZ;MAAA,UAMIM,WAAD,IAAiB;QAChBC,OAAO,CAACC,GAAR,CAAYF,WAAZ;QACA,oBACE,QAAC,IAAD;UAAM,SAAS,EAAEd,MAAM,CAACiB,cAAxB;UAAA,wBACE;YACE,IAAI,EAAC,SADP;YAEE,SAAS,EAAEjB,MAAM,CAACa,OAFpB;YAGE,SAAS,EAAC,UAHZ;YAIE,WAAW,EAAC,qBAJd;YAKE,QAAQ,EAAGK,CAAD,IAAKJ,WAAW;UAL5B;YAAA;YAAA;YAAA;UAAA,QADF,eASE;YACE,IAAI,EAAC,QADP;YAEE,KAAK,EAAC,MAFR;YAGE,SAAS,EAAEd,MAAM,CAACmB;UAHpB;YAAA;YAAA;YAAA;UAAA,QATF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF;MAiBD;IAzBH;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AA+BD,CAtCD;;GAAMhB,Y;UACaD,W;;;KADbC,Y;AAwCN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}