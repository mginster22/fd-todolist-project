{"ast":null,"code":"import axios from \"axios\";\nimport FormData from \"form-data\";\nimport qs from \"query-string\";\nconst httpClient = axios.create({\n  baseURL: \"http://localhost:3001/api\"\n});\nexport const createUser = data => {\n  const form = new FormData();\n  form.append(\"name\", data.name);\n  form.append(\"login\", data.login);\n  form.append(\"password\", data.password);\n  form.append(\"avatar\", data.avatar);\n  return httpClient.post(\"/users\", form, {\n    headers: {\n      \"Content-Type\": \"multipart/form/data\"\n    }\n  });\n};\nexport const getAllUsers = _ref => {\n  let {\n    limit,\n    offset\n  } = _ref;\n  return httpClient.get(`/users?${qs.stringify({\n    limit,\n    offset\n  })}`);\n};\nexport const getUserById = _ref2 => {\n  let {\n    userId\n  } = _ref2;\n  return httpClient.get(`/users/${userId}`);\n};\nexport const deleteUser = id => httpClient.delete(`/users/${id}`);\nexport const updateUser = _ref3 => {\n  let {\n    data,\n    userId\n  } = _ref3;\n  const form = new FormData();\n  form.append(\"login\", data.login);\n  form.append(\"name\", data.name);\n  form.append(\"password\", data.password);\n  form.append(\"avatar\", data.avatar);\n  return httpClient.patch(`/users/${userId}`, form, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  });\n}; //http://localhost:3001/api/users/2/tasks\n\nexport const createTask = _ref4 => {\n  let {\n    data,\n    userId\n  } = _ref4;\n  return httpClient.post(`/users/${userId}/tasks`, data);\n};\nexport const getTaskUser = _ref5 => {\n  let {\n    userId\n  } = _ref5;\n  return httpClient.get(`/users/${userId}/task`);\n}; //taskRouter.delete(\"/:userId/task/:taskId\",TaskControler.deleteUserTaskId)\n\nexport const deleteUserTask = _ref6 => {\n  let {\n    userId,\n    taskId\n  } = _ref6;\n  return httpClient.delete(`/users/${userId}`);\n};","map":{"version":3,"names":["axios","FormData","qs","httpClient","create","baseURL","createUser","data","form","append","name","login","password","avatar","post","headers","getAllUsers","limit","offset","get","stringify","getUserById","userId","deleteUser","id","delete","updateUser","patch","createTask","getTaskUser","deleteUserTask","taskId"],"sources":["/home/oem/Todo1/client/src/api/index.js"],"sourcesContent":["import axios from \"axios\";\nimport FormData from \"form-data\";\nimport qs from \"query-string\";\nconst httpClient = axios.create({\n  baseURL: \"http://localhost:3001/api\",\n});\n\nexport const createUser = (data) => {\n  const form = new FormData();\n  form.append(\"name\", data.name);\n  form.append(\"login\", data.login);\n  form.append(\"password\", data.password);\n  form.append(\"avatar\", data.avatar);\n  return httpClient.post(\"/users\", form, {\n    headers: {\n      \"Content-Type\": \"multipart/form/data\",\n    },\n  });\n};\nexport const getAllUsers = ({ limit, offset }) =>\n  httpClient.get(`/users?${qs.stringify({ limit, offset })}`);\n\nexport const getUserById = ({ userId }) => httpClient.get(`/users/${userId}`);\n\nexport const deleteUser = (id) => httpClient.delete(`/users/${id}`);\n\nexport const updateUser = ({ data, userId }) => {\n  const form = new FormData();\n  form.append(\"login\", data.login);\n  form.append(\"name\", data.name);\n  form.append(\"password\", data.password);\n  form.append(\"avatar\", data.avatar);\n\n  return httpClient.patch(`/users/${userId}`, form, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    },\n  });\n};\n//http://localhost:3001/api/users/2/tasks\nexport const createTask = ({ data, userId }) => {\n  return httpClient.post(`/users/${userId}/tasks`, data);\n};\n\nexport const getTaskUser = ({ userId }) =>\n  httpClient.get(`/users/${userId}/task`);\n\n//taskRouter.delete(\"/:userId/task/:taskId\",TaskControler.deleteUserTaskId)\n\nexport const deleteUserTask=({userId,taskId})=>httpClient.delete(`/users/${userId}`)"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,EAAP,MAAe,cAAf;AACA,MAAMC,UAAU,GAAGH,KAAK,CAACI,MAAN,CAAa;EAC9BC,OAAO,EAAE;AADqB,CAAb,CAAnB;AAIA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;EAClC,MAAMC,IAAI,GAAG,IAAIP,QAAJ,EAAb;EACAO,IAAI,CAACC,MAAL,CAAY,MAAZ,EAAoBF,IAAI,CAACG,IAAzB;EACAF,IAAI,CAACC,MAAL,CAAY,OAAZ,EAAqBF,IAAI,CAACI,KAA1B;EACAH,IAAI,CAACC,MAAL,CAAY,UAAZ,EAAwBF,IAAI,CAACK,QAA7B;EACAJ,IAAI,CAACC,MAAL,CAAY,QAAZ,EAAsBF,IAAI,CAACM,MAA3B;EACA,OAAOV,UAAU,CAACW,IAAX,CAAgB,QAAhB,EAA0BN,IAA1B,EAAgC;IACrCO,OAAO,EAAE;MACP,gBAAgB;IADT;EAD4B,CAAhC,CAAP;AAKD,CAXM;AAYP,OAAO,MAAMC,WAAW,GAAG;EAAA,IAAC;IAAEC,KAAF;IAASC;EAAT,CAAD;EAAA,OACzBf,UAAU,CAACgB,GAAX,CAAgB,UAASjB,EAAE,CAACkB,SAAH,CAAa;IAAEH,KAAF;IAASC;EAAT,CAAb,CAAgC,EAAzD,CADyB;AAAA,CAApB;AAGP,OAAO,MAAMG,WAAW,GAAG;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,OAAgBnB,UAAU,CAACgB,GAAX,CAAgB,UAASG,MAAO,EAAhC,CAAhB;AAAA,CAApB;AAEP,OAAO,MAAMC,UAAU,GAAIC,EAAD,IAAQrB,UAAU,CAACsB,MAAX,CAAmB,UAASD,EAAG,EAA/B,CAA3B;AAEP,OAAO,MAAME,UAAU,GAAG,SAAsB;EAAA,IAArB;IAAEnB,IAAF;IAAQe;EAAR,CAAqB;EAC9C,MAAMd,IAAI,GAAG,IAAIP,QAAJ,EAAb;EACAO,IAAI,CAACC,MAAL,CAAY,OAAZ,EAAqBF,IAAI,CAACI,KAA1B;EACAH,IAAI,CAACC,MAAL,CAAY,MAAZ,EAAoBF,IAAI,CAACG,IAAzB;EACAF,IAAI,CAACC,MAAL,CAAY,UAAZ,EAAwBF,IAAI,CAACK,QAA7B;EACAJ,IAAI,CAACC,MAAL,CAAY,QAAZ,EAAsBF,IAAI,CAACM,MAA3B;EAEA,OAAOV,UAAU,CAACwB,KAAX,CAAkB,UAASL,MAAO,EAAlC,EAAqCd,IAArC,EAA2C;IAChDO,OAAO,EAAE;MACP,gBAAgB;IADT;EADuC,CAA3C,CAAP;AAKD,CAZM,C,CAaP;;AACA,OAAO,MAAMa,UAAU,GAAG,SAAsB;EAAA,IAArB;IAAErB,IAAF;IAAQe;EAAR,CAAqB;EAC9C,OAAOnB,UAAU,CAACW,IAAX,CAAiB,UAASQ,MAAO,QAAjC,EAA0Cf,IAA1C,CAAP;AACD,CAFM;AAIP,OAAO,MAAMsB,WAAW,GAAG;EAAA,IAAC;IAAEP;EAAF,CAAD;EAAA,OACzBnB,UAAU,CAACgB,GAAX,CAAgB,UAASG,MAAO,OAAhC,CADyB;AAAA,CAApB,C,CAGP;;AAEA,OAAO,MAAMQ,cAAc,GAAC;EAAA,IAAC;IAACR,MAAD;IAAQS;EAAR,CAAD;EAAA,OAAmB5B,UAAU,CAACsB,MAAX,CAAmB,UAASH,MAAO,EAAnC,CAAnB;AAAA,CAArB"},"metadata":{},"sourceType":"module"}