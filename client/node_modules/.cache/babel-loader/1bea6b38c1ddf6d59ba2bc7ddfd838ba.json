{"ast":null,"code":"var _jsxFileName = \"/home/oem/Todo1/client/src/components/forms/UserFormEdit/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { updateUserRequset } from \"../../../actions/usersCreators\";\nimport AutoAwesomeMotionIcon from \"@mui/icons-material/AutoAwesomeMotion\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport * as Yup from \"yup\";\nimport cx from \"classnames\";\nimport styles from \"./UserFormEdit.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserFormEdit = _ref => {\n  _s();\n\n  let {\n    setModalActive,\n    users\n  } = _ref;\n  const dispatch = useDispatch();\n  console.log(users);\n  useEffect(() => {\n    dispatch;\n  }, []);\n  const filePicker = useRef(null);\n\n  const onSubmit = (values, formikBag) => {\n    dispatch(updateUserRequset({\n      values: values\n    }));\n    console.log(dispatch(updateUserRequset({\n      values: values\n    })));\n    formikBag.resetForm();\n  };\n\n  const handlerPick = () => filePicker.current.click();\n\n  const validationShemas = Yup.object({\n    login: Yup.string().required(\"Must be required\"),\n    password: Yup.string().required(\"Must be required\"),\n    name: Yup.string().required(\"Must be required\")\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modal_container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.modal_wrapper,\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            login: \"\",\n            name: \"\",\n            password: \"\",\n            avatar: \"\"\n          },\n          validationSchema: validationShemas,\n          onSubmit: onSubmit,\n          children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n            className: styles.form,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.close_modal,\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                className: styles.modal_close_item,\n                onClick: () => setModalActive(false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.login,\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                name: \"name\",\n                children: _ref2 => {\n                  let {\n                    field,\n                    form,\n                    meta\n                  } = _ref2;\n                  const inputClasses = cx(styles.registr_input, {\n                    [styles.invalid]: meta.error && meta.touched\n                  });\n                  return /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n                    className: inputClasses,\n                    placeholder: \"name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 27\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"name\",\n                component: \"div\",\n                className: styles.error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.login,\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                name: \"login\",\n                children: _ref3 => {\n                  let {\n                    field,\n                    form,\n                    meta\n                  } = _ref3;\n                  const inputClasses = cx(styles.registr_input, {\n                    [styles.invalid]: meta.error && meta.touched\n                  });\n                  return /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n                    className: inputClasses,\n                    placeholder: \"login\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 27\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"login\",\n                component: \"div\",\n                className: styles.error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.password,\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                name: \"password\",\n                children: _ref4 => {\n                  let {\n                    field,\n                    form,\n                    meta\n                  } = _ref4;\n                  const inputClasses = cx(styles.registr_input, {\n                    [styles.invalid]: meta.error && meta.touched\n                  });\n                  return /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n                    className: inputClasses,\n                    placeholder: \"password\",\n                    type: \"password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 27\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"password\",\n                component: \"div\",\n                className: styles.error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handlerPick,\n              className: styles.file_picker,\n              type: \"button\",\n              children: /*#__PURE__*/_jsxDEV(AutoAwesomeMotionIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"avatar\",\n              ref: filePicker,\n              className: styles.hidden,\n              onChange: e => formikProps.setFieldValue(\"avatar\", e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              className: styles.submit,\n              value: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n\n_s(UserFormEdit, \"loelLovpuDFXkk9Z8m+IMsbSwSE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = UserFormEdit;\nexport default UserFormEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserFormEdit\");","map":{"version":3,"names":["React","useRef","useEffect","Formik","Form","Field","ErrorMessage","useDispatch","updateUserRequset","AutoAwesomeMotionIcon","CloseIcon","Yup","cx","styles","UserFormEdit","setModalActive","users","dispatch","console","log","filePicker","onSubmit","values","formikBag","resetForm","handlerPick","current","click","validationShemas","object","login","string","required","password","name","map","user","modal_container","modal_wrapper","avatar","formikProps","form","close_modal","modal_close_item","field","meta","inputClasses","registr_input","invalid","error","touched","file_picker","hidden","e","setFieldValue","target","files","submit"],"sources":["/home/oem/Todo1/client/src/components/forms/UserFormEdit/index.js"],"sourcesContent":["import React, { useRef,useEffect } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { updateUserRequset } from \"../../../actions/usersCreators\";\nimport AutoAwesomeMotionIcon from \"@mui/icons-material/AutoAwesomeMotion\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport * as Yup from \"yup\";\nimport cx from \"classnames\";\nimport styles from \"./UserFormEdit.module.scss\";\n\nconst UserFormEdit = ({ setModalActive, users }) => {\n  const dispatch = useDispatch();\n  console.log(users);\n\n  useEffect(()=>{\n    dispatch\n  },[])\n  const filePicker = useRef(null);\n\n  const onSubmit = (values, formikBag) => {\n    dispatch(updateUserRequset({ values: values }));\n    console.log(dispatch(updateUserRequset({ values: values })));\n    formikBag.resetForm();\n  };\n\n  const handlerPick = () => filePicker.current.click();\n\n  const validationShemas = Yup.object({\n    login: Yup.string().required(\"Must be required\"),\n    password: Yup.string().required(\"Must be required\"),\n    name: Yup.string().required(\"Must be required\"),\n  });\n\n  return (\n    <>\n      {users.map((user) => (\n        <div className={styles.modal_container}>\n          <div className={styles.modal_wrapper}>\n            <Formik\n              initialValues={{\n                login: \"\",\n                name: \"\",\n                password: \"\",\n                avatar: \"\",\n              }}\n              validationSchema={validationShemas}\n              onSubmit={onSubmit}\n            >\n              {(formikProps) => (\n                <Form className={styles.form}>\n                  <div className={styles.close_modal}>\n                    {\n                      <CloseIcon\n                        className={styles.modal_close_item}\n                        onClick={() => setModalActive(false)}\n                      />\n                    }\n                  </div>\n                  <label className={styles.login}>\n                    <Field name=\"name\">\n                      {({ field, form, meta }) => {\n                        const inputClasses = cx(styles.registr_input, {\n                          [styles.invalid]: meta.error && meta.touched,\n                        });\n                        return (\n                          <input\n                            {...field}\n                            className={inputClasses}\n                            placeholder=\"name\"\n                          />\n                        );\n                      }}\n                    </Field>\n                    <ErrorMessage\n                      name=\"name\"\n                      component=\"div\"\n                      className={styles.error}\n                    />\n                  </label>\n                  <label className={styles.login}>\n                    <Field name=\"login\">\n                      {({ field, form, meta }) => {\n                        const inputClasses = cx(styles.registr_input, {\n                          [styles.invalid]: meta.error && meta.touched,\n                        });\n                        return (\n                          <input\n                            {...field}\n                            className={inputClasses}\n                            placeholder=\"login\"\n                          />\n                        );\n                      }}\n                    </Field>\n                    <ErrorMessage\n                      name=\"login\"\n                      component=\"div\"\n                      className={styles.error}\n                    />\n                  </label>\n                  <label className={styles.password}>\n                    <Field name=\"password\">\n                      {({ field, form, meta }) => {\n                        const inputClasses = cx(styles.registr_input, {\n                          [styles.invalid]: meta.error && meta.touched,\n                        });\n                        return (\n                          <input\n                            {...field}\n                            className={inputClasses}\n                            placeholder=\"password\"\n                            type=\"password\"\n                          />\n                        );\n                      }}\n                    </Field>\n                    <ErrorMessage\n                      name=\"password\"\n                      component=\"div\"\n                      className={styles.error}\n                    />\n                  </label>\n\n                  <button\n                    onClick={handlerPick}\n                    className={styles.file_picker}\n                    type=\"button\"\n                  >\n                    <AutoAwesomeMotionIcon />\n                  </button>\n                  <input\n                    type=\"file\"\n                    name=\"avatar\"\n                    ref={filePicker}\n                    className={styles.hidden}\n                    onChange={(e) =>\n                      formikProps.setFieldValue(\"avatar\", e.target.files[0])\n                    }\n                  />\n                  <input type=\"submit\" className={styles.submit} value=\"Save\" />\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default UserFormEdit;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}