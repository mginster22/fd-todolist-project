{"ast":null,"code":"var _jsxFileName = \"/home/oem/Todo1/client/src/components/UserForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createUserRequest } from \"../../actions/usersCreators\";\nimport { Link } from \"react-router-dom\";\nimport Yup from 'yup';\nimport styles from \"./UserForm.module.scss\";\nimport gomer from \"./homer_registr.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    users,\n    isFetching\n  } = useSelector(_ref => {\n    let {\n      users\n    } = _ref;\n    return users;\n  });\n  console.log(isFetching);\n  const filePicker = useRef(null);\n\n  const onSubmit = (values, formikBag) => {\n    dispatch(createUserRequest(values));\n    console.log(values);\n    formikBag.resetForm();\n  };\n\n  const handlerPick = () => filePicker.current.click();\n\n  const validationShemas = Yup.object({\n    login: str\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isFetching ? /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        login: \"\",\n        password: \"\",\n        avatar: \"\"\n      },\n      onSubmit: onSubmit,\n      children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"login\",\n          placeholder: \"login\",\n          className: styles.registr_input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          placeholder: \"password\",\n          className: styles.registr_input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlerPick,\n          className: styles.file_picker,\n          type: \"button\",\n          children: \"Chooze file..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"avatar\",\n          ref: filePicker,\n          accept: true,\n          className: styles.hidden,\n          onChange: e => formikProps.setFieldValue(\"avatar\", e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: styles.submit,\n          value: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.finish_registr,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: gomer,\n        alt: \"gomer\",\n        className: styles.gomer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.finish_text,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.heading_finish,\n          children: \"All good!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Registration successful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserForm, \"nVQWcKOLB+r4SojbaVEHiIqfcWc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserForm;\nexport default UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useRef","Formik","Form","Field","useDispatch","useSelector","createUserRequest","Link","Yup","styles","gomer","UserForm","dispatch","users","isFetching","console","log","filePicker","onSubmit","values","formikBag","resetForm","handlerPick","current","click","validationShemas","object","login","str","password","avatar","formikProps","form","registr_input","file_picker","hidden","e","setFieldValue","target","files","submit","finish_registr","finish_text","heading_finish"],"sources":["/home/oem/Todo1/client/src/components/UserForm/index.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createUserRequest } from \"../../actions/usersCreators\";\nimport { Link } from \"react-router-dom\";\nimport Yup from 'yup'\nimport styles from \"./UserForm.module.scss\";\nimport gomer from \"./homer_registr.jpg\";\n\n\n\nconst UserForm = () => {\n  const dispatch = useDispatch();\n  const { users, isFetching } = useSelector(({ users }) => users);\n  console.log(isFetching);\n  const filePicker = useRef(null);\n  const onSubmit = (values, formikBag) => {\n    dispatch(createUserRequest(values));\n    console.log(values);\n    formikBag.resetForm();\n  };\n  const handlerPick = () => filePicker.current.click();\n\n  const validationShemas = Yup.object({\n    login:str\n  })\n  return (\n    <>\n      {!isFetching ? (\n        <Formik\n          initialValues={{\n            login: \"\",\n            password: \"\",\n            avatar: \"\",\n          }}\n          onSubmit={onSubmit}\n        >\n          {(formikProps) => (\n            <Form className={styles.form}>\n              <Field\n                name=\"login\"\n                placeholder=\"login\"\n                className={styles.registr_input}\n              />\n              <Field\n                name=\"password\"\n                placeholder=\"password\"\n                className={styles.registr_input}\n              />\n              <button\n                onClick={handlerPick}\n                className={styles.file_picker}\n                type=\"button\"\n              >\n                Chooze file..\n              </button>\n              <input\n                type=\"file\"\n                name=\"avatar\"\n                ref={filePicker}\n                accept\n                className={styles.hidden}\n                onChange={(e) =>\n                  formikProps.setFieldValue(\"avatar\", e.target.files[0])\n                }\n              />\n              <input type=\"submit\" className={styles.submit} value=\"Next\" />\n              \n            </Form>\n          )}\n        </Formik>\n      ) : (\n        <div className={styles.finish_registr}>\n          <img src={gomer} alt=\"gomer\" className={styles.gomer} />\n          <div className={styles.finish_text}>\n            <h2 className={styles.heading_finish}>All good!</h2>\n            <h3>Registration successful</h3>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default UserForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}