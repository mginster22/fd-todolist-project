{"ast":null,"code":"var _jsxFileName = \"/home/oem/Todo1/client/src/components/forms/UserFormEdit/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { updateUserRequset } from \"../../../actions/usersCreators\";\nimport AutoAwesomeMotionIcon from \"@mui/icons-material/AutoAwesomeMotion\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport * as Yup from \"yup\";\nimport cx from \"classnames\";\nimport styles from \"./UserFormEdit.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserFormEdit = _ref => {\n  _s();\n\n  let {\n    setModalActive,\n    users\n  } = _ref;\n  const dispatch = useDispatch();\n  const [user] = users.filter(u => u.id);\n  console.log(user);\n  const filePicker = useRef(null);\n\n  const onSubmit = (values, formikBag) => {\n    dispatch(updateUserRequset({\n      values: values,\n      userId: user.id\n    }));\n    console.log(dispatch(updateUserRequset({\n      values: values,\n      userId: user.id\n    })));\n    formikBag.resetForm();\n  };\n\n  const handlerPick = () => filePicker.current.click();\n\n  const validationShemas = Yup.object({\n    login: Yup.string().required(\"Must be required\"),\n    password: Yup.string().required(\"Must be required\"),\n    name: Yup.string().required(\"Must be required\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.modal_container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modal_wrapper,\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          login: \"\",\n          name: \"\",\n          password: \"\",\n          avatar: \"\"\n        },\n        validationSchema: validationShemas,\n        onSubmit: onSubmit,\n        children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n          className: styles.form,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.close_modal,\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n              className: styles.modal_close_item,\n              onClick: () => setModalActive(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.login,\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              name: \"name\",\n              children: _ref2 => {\n                let {\n                  field,\n                  form,\n                  meta\n                } = _ref2;\n                const inputClasses = cx(styles.registr_input, {\n                  [styles.invalid]: meta.error && meta.touched\n                });\n                return /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n                  className: inputClasses,\n                  placeholder: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 23\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"name\",\n              component: \"div\",\n              className: styles.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.login,\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              name: \"login\",\n              children: _ref3 => {\n                let {\n                  field,\n                  form,\n                  meta\n                } = _ref3;\n                const inputClasses = cx(styles.registr_input, {\n                  [styles.invalid]: meta.error && meta.touched\n                });\n                return /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n                  className: inputClasses,\n                  placeholder: \"login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 23\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"login\",\n              component: \"div\",\n              className: styles.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.password,\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              name: \"password\",\n              children: _ref4 => {\n                let {\n                  field,\n                  form,\n                  meta\n                } = _ref4;\n                const inputClasses = cx(styles.registr_input, {\n                  [styles.invalid]: meta.error && meta.touched\n                });\n                return /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n                  className: inputClasses,\n                  placeholder: \"password\",\n                  type: \"password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 23\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\",\n              className: styles.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlerPick,\n            className: styles.file_picker,\n            type: \"button\",\n            children: /*#__PURE__*/_jsxDEV(AutoAwesomeMotionIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"avatar\",\n            ref: filePicker,\n            className: styles.hidden,\n            onChange: e => formikProps.setFieldValue(\"avatar\", e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: styles.submit,\n            value: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserFormEdit, \"/ICCwmVsY2UsTosw8ToPOft4S9M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = UserFormEdit;\nexport default UserFormEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserFormEdit\");","map":{"version":3,"names":["React","useRef","Formik","Form","Field","ErrorMessage","useDispatch","updateUserRequset","AutoAwesomeMotionIcon","CloseIcon","Yup","cx","styles","UserFormEdit","setModalActive","users","dispatch","user","filter","u","id","console","log","filePicker","onSubmit","values","formikBag","userId","resetForm","handlerPick","current","click","validationShemas","object","login","string","required","password","name","modal_container","modal_wrapper","avatar","formikProps","form","close_modal","modal_close_item","field","meta","inputClasses","registr_input","invalid","error","touched","file_picker","hidden","e","setFieldValue","target","files","submit"],"sources":["/home/oem/Todo1/client/src/components/forms/UserFormEdit/index.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { updateUserRequset } from \"../../../actions/usersCreators\";\nimport AutoAwesomeMotionIcon from \"@mui/icons-material/AutoAwesomeMotion\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport * as Yup from \"yup\";\nimport cx from \"classnames\";\nimport styles from \"./UserFormEdit.module.scss\";\n\nconst UserFormEdit = ({ setModalActive, users }) => {\n  \n  const dispatch = useDispatch();\n  const [user] = users.filter((u) => u.id);\n  console.log(user);\n  const filePicker = useRef(null);\n\n  const onSubmit = (values, formikBag) => {\n    dispatch(updateUserRequset({ values: values, userId: user.id }));\n    console.log(\n      dispatch(updateUserRequset({ values: values, userId: user.id }))\n    );\n    formikBag.resetForm();\n  };\n\n  const handlerPick = () => filePicker.current.click();\n\n  const validationShemas = Yup.object({\n    login: Yup.string().required(\"Must be required\"),\n    password: Yup.string().required(\"Must be required\"),\n    name: Yup.string().required(\"Must be required\"),\n  });\n\n  return (\n    <div className={styles.modal_container}>\n      <div className={styles.modal_wrapper}>\n        <Formik\n          initialValues={{\n            login: \"\",\n            name: \"\",\n            password: \"\",\n            avatar: \"\",\n          }}\n          validationSchema={validationShemas}\n          onSubmit={onSubmit}\n        >\n          {(formikProps) => (\n            <Form className={styles.form}>\n              <div className={styles.close_modal}>\n                {\n                  <CloseIcon\n                    className={styles.modal_close_item}\n                    onClick={() => setModalActive(false)}\n                  />\n                }\n              </div>\n              <label className={styles.login}>\n                <Field name=\"name\">\n                  {({ field, form, meta }) => {\n                    const inputClasses = cx(styles.registr_input, {\n                      [styles.invalid]: meta.error && meta.touched,\n                    });\n                    return (\n                      <input\n                        {...field}\n                        className={inputClasses}\n                        placeholder=\"name\"\n                      />\n                    );\n                  }}\n                </Field>\n                <ErrorMessage\n                  name=\"name\"\n                  component=\"div\"\n                  className={styles.error}\n                />\n              </label>\n              <label className={styles.login}>\n                <Field name=\"login\">\n                  {({ field, form, meta }) => {\n                    const inputClasses = cx(styles.registr_input, {\n                      [styles.invalid]: meta.error && meta.touched,\n                    });\n                    return (\n                      <input\n                        {...field}\n                        className={inputClasses}\n                        placeholder=\"login\"\n                      />\n                    );\n                  }}\n                </Field>\n                <ErrorMessage\n                  name=\"login\"\n                  component=\"div\"\n                  className={styles.error}\n                />\n              </label>\n              <label className={styles.password}>\n                <Field name=\"password\">\n                  {({ field, form, meta }) => {\n                    const inputClasses = cx(styles.registr_input, {\n                      [styles.invalid]: meta.error && meta.touched,\n                    });\n                    return (\n                      <input\n                        {...field}\n                        className={inputClasses}\n                        placeholder=\"password\"\n                        type=\"password\"\n                      />\n                    );\n                  }}\n                </Field>\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"div\"\n                  className={styles.error}\n                />\n              </label>\n\n              <button\n                onClick={handlerPick}\n                className={styles.file_picker}\n                type=\"button\"\n              >\n                <AutoAwesomeMotionIcon />\n              </button>\n              <input\n                type=\"file\"\n                name=\"avatar\"\n                ref={filePicker}\n                className={styles.hidden}\n                onChange={(e) =>\n                  formikProps.setFieldValue(\"avatar\", e.target.files[0])\n                }\n              />\n              <input type=\"submit\" className={styles.submit} value=\"Save\" />\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default UserFormEdit;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}