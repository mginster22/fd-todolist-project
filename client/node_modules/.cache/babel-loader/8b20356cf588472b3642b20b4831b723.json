{"ast":null,"code":"import { put } from \"redux-saga/effects\";\nimport { createUserSuccess, createUserError, getUsersSuccess, getUsersError, ge } from \"../actions/usersCreators\";\nimport { createUser, getAllUsers, getUserById } from \"../api\";\nexport function* createUserSaga(action) {\n  try {\n    const {\n      data: {\n        data: user\n      }\n    } = yield createUser(action.payload.values);\n    yield put(createUserSuccess(user));\n  } catch (error) {\n    yield put(createUserError(error));\n  }\n}\nexport function* getAllUsersSaga(action) {\n  try {\n    const {\n      data: {\n        data: users\n      }\n    } = yield getAllUsers(action.payload);\n    yield put(getUsersSuccess(users));\n  } catch (error) {\n    yield put(getUsersError(error));\n  }\n}\nexport function* getUserByIdSaga(action) {\n  try {\n    const {\n      data: {\n        data: user\n      }\n    } = yield getUserById(action.payload);\n    yield put(getUserByIdSuccess(user));\n  } catch (error) {\n    yield put(getUserByIdError(error));\n  }\n}","map":{"version":3,"names":["put","createUserSuccess","createUserError","getUsersSuccess","getUsersError","ge","createUser","getAllUsers","getUserById","createUserSaga","action","data","user","payload","values","error","getAllUsersSaga","users","getUserByIdSaga","getUserByIdSuccess","getUserByIdError"],"sources":["/home/oem/Todo1/client/src/sagas/usersSagas.js"],"sourcesContent":["import { put } from \"redux-saga/effects\";\nimport {\n  createUserSuccess,\n  createUserError,\n  getUsersSuccess,\n  getUsersError,\n  ge\n} from \"../actions/usersCreators\";\nimport { createUser, getAllUsers, getUserById } from \"../api\";\n\nexport function* createUserSaga(action) {\n  try {\n    const {\n      data: { data: user },\n    } = yield createUser(action.payload.values);\n    yield put(createUserSuccess(user));\n  } catch (error) {\n    yield put(createUserError(error));\n  }\n}\nexport function* getAllUsersSaga(action) {\n  try {\n    const {\n      data: { data: users },\n    } = yield getAllUsers(action.payload);\n    yield put(getUsersSuccess(users));\n  } catch (error) {\n    yield put(getUsersError(error));\n  }\n}\nexport function* getUserByIdSaga(action) {\n  try {\n    const {\n      data: { data: user },\n    } = yield getUserById(action.payload);\n    yield put(getUserByIdSuccess(user));\n  } catch (error) {\n    yield put(getUserByIdError(error));\n  }\n}\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,oBAApB;AACA,SACEC,iBADF,EAEEC,eAFF,EAGEC,eAHF,EAIEC,aAJF,EAKEC,EALF,QAMO,0BANP;AAOA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,WAAlC,QAAqD,QAArD;AAEA,OAAO,UAAUC,cAAV,CAAyBC,MAAzB,EAAiC;EACtC,IAAI;IACF,MAAM;MACJC,IAAI,EAAE;QAAEA,IAAI,EAAEC;MAAR;IADF,IAEF,MAAMN,UAAU,CAACI,MAAM,CAACG,OAAP,CAAeC,MAAhB,CAFpB;IAGA,MAAMd,GAAG,CAACC,iBAAiB,CAACW,IAAD,CAAlB,CAAT;EACD,CALD,CAKE,OAAOG,KAAP,EAAc;IACd,MAAMf,GAAG,CAACE,eAAe,CAACa,KAAD,CAAhB,CAAT;EACD;AACF;AACD,OAAO,UAAUC,eAAV,CAA0BN,MAA1B,EAAkC;EACvC,IAAI;IACF,MAAM;MACJC,IAAI,EAAE;QAAEA,IAAI,EAAEM;MAAR;IADF,IAEF,MAAMV,WAAW,CAACG,MAAM,CAACG,OAAR,CAFrB;IAGA,MAAMb,GAAG,CAACG,eAAe,CAACc,KAAD,CAAhB,CAAT;EACD,CALD,CAKE,OAAOF,KAAP,EAAc;IACd,MAAMf,GAAG,CAACI,aAAa,CAACW,KAAD,CAAd,CAAT;EACD;AACF;AACD,OAAO,UAAUG,eAAV,CAA0BR,MAA1B,EAAkC;EACvC,IAAI;IACF,MAAM;MACJC,IAAI,EAAE;QAAEA,IAAI,EAAEC;MAAR;IADF,IAEF,MAAMJ,WAAW,CAACE,MAAM,CAACG,OAAR,CAFrB;IAGA,MAAMb,GAAG,CAACmB,kBAAkB,CAACP,IAAD,CAAnB,CAAT;EACD,CALD,CAKE,OAAOG,KAAP,EAAc;IACd,MAAMf,GAAG,CAACoB,gBAAgB,CAACL,KAAD,CAAjB,CAAT;EACD;AACF"},"metadata":{},"sourceType":"module"}