{"ast":null,"code":"var _jsxFileName = \"/home/oem/Todo1/client/src/components/forms/TaskForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { createTaskRequest } from \"../../../actions/taskCreators\";\nimport styles from \"./TaskForm.module.scss\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst taskContentSchema = Yup.object({\n  content: Yup.string(\"must be string\").min(2, \"min 2 symbols\").max(64, \"max 64 symbols\")\n});\n\nconst TaskForm = _ref => {\n  _s();\n\n  let {\n    userId\n  } = _ref;\n  const dispatch = useDispatch();\n\n  const onSubmit = (values, formikBag) => {\n    dispatch(createTaskRequest({\n      values,\n      userId\n    }));\n    formikBag.resetForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      content: \"\"\n    },\n    onSubmit: onSubmit,\n    validationSchema: taskContentSchema,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: styles.form_task,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.content_input,\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"content\",\n          className: styles.content,\n          component: \"textarea\",\n          placeholder: \"write your task...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"content\",\n          component: \"span\",\n          className: styles.task_form_err_message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"send\",\n        className: styles.add_task_button\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskForm, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TaskForm;\nexport default TaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","useDispatch","createTaskRequest","styles","Yup","taskContentSchema","object","content","string","min","max","TaskForm","userId","dispatch","onSubmit","values","formikBag","resetForm","form_task","content_input","task_form_err_message","add_task_button"],"sources":["/home/oem/Todo1/client/src/components/forms/TaskForm/index.js"],"sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { createTaskRequest } from \"../../../actions/taskCreators\";\nimport styles from \"./TaskForm.module.scss\";\nimport * as Yup from \"yup\";\n\nconst taskContentSchema = Yup.object({\n  content: Yup.string(\"must be string\")\n    .min(2, \"min 2 symbols\")\n    .max(64, \"max 64 symbols\"),\n});\n\nconst TaskForm = ({ userId }) => {\n  const dispatch = useDispatch();\n  const onSubmit = (values, formikBag) => {\n    dispatch(createTaskRequest({ values, userId }));\n    formikBag.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        content: \"\",\n      }}\n      onSubmit={onSubmit}\n      validationSchema={taskContentSchema}\n    >\n      <Form className={styles.form_task}>\n        <div className={styles.content_input}>\n          <Field\n            name=\"content\"\n            className={styles.content}\n            component=\"textarea\"\n            placeholder=\"write your task...\"\n          />\n          <ErrorMessage name=\"content\" component=\"span\" className={styles.task_form_err_message}/>\n        </div>\n        <input type=\"submit\" value=\"send\" className={styles.add_task_button} />\n      </Form>\n    </Formik>\n  );\n};\n\nexport default TaskForm;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,iBAAiB,GAAGD,GAAG,CAACE,MAAJ,CAAW;EACnCC,OAAO,EAAEH,GAAG,CAACI,MAAJ,CAAW,gBAAX,EACNC,GADM,CACF,CADE,EACC,eADD,EAENC,GAFM,CAEF,EAFE,EAEE,gBAFF;AAD0B,CAAX,CAA1B;;AAMA,MAAMC,QAAQ,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAAEC;EAAF,CAAe;EAC/B,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;;EACA,MAAMa,QAAQ,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuB;IACtCH,QAAQ,CAACX,iBAAiB,CAAC;MAAEa,MAAF;MAAUH;IAAV,CAAD,CAAlB,CAAR;IACAI,SAAS,CAACC,SAAV;EACD,CAHD;;EAKA,oBACE,QAAC,MAAD;IACE,aAAa,EAAE;MACbV,OAAO,EAAE;IADI,CADjB;IAIE,QAAQ,EAAEO,QAJZ;IAKE,gBAAgB,EAAET,iBALpB;IAAA,uBAOE,QAAC,IAAD;MAAM,SAAS,EAAEF,MAAM,CAACe,SAAxB;MAAA,wBACE;QAAK,SAAS,EAAEf,MAAM,CAACgB,aAAvB;QAAA,wBACE,QAAC,KAAD;UACE,IAAI,EAAC,SADP;UAEE,SAAS,EAAEhB,MAAM,CAACI,OAFpB;UAGE,SAAS,EAAC,UAHZ;UAIE,WAAW,EAAC;QAJd;UAAA;UAAA;UAAA;QAAA,QADF,eAOE,QAAC,YAAD;UAAc,IAAI,EAAC,SAAnB;UAA6B,SAAS,EAAC,MAAvC;UAA8C,SAAS,EAAEJ,MAAM,CAACiB;QAAhE;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAUE;QAAO,IAAI,EAAC,QAAZ;QAAqB,KAAK,EAAC,MAA3B;QAAkC,SAAS,EAAEjB,MAAM,CAACkB;MAApD;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA;EAPF;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CA7BD;;GAAMV,Q;UACaV,W;;;KADbU,Q;AA+BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}