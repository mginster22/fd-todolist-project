{"ast":null,"code":"var _jsxFileName = \"/home/oem/Todo1/client/src/components/forms/UserFormEdit/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { createUserRequest } from \"../../../actions/usersCreators\";\nimport AutoAwesomeMotionIcon from \"@mui/icons-material/AutoAwesomeMotion\";\nimport * as Yup from \"yup\";\nimport cx from \"classnames\";\nimport styles from \"./UserFormEdit.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserFormEdit = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const filePicker = useRef(null);\n\n  const onSubmit = (values, formikBag) => {\n    dispatch(createUserRequest(values));\n    formikBag.resetForm();\n  };\n\n  const handlerPick = () => filePicker.current.click();\n\n  const validationShemas = Yup.object({\n    login: Yup.string().required(\"Must be required\"),\n    password: Yup.string().required(\"Must be required\"),\n    name: Yup.string().required(\"Must be required\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.modal_container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        login: \"\",\n        name: \"\",\n        password: \"\",\n        avatar: \"\"\n      },\n      validationSchema: validationShemas,\n      onSubmit: onSubmit,\n      children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.login,\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"name\",\n            children: _ref => {\n              let {\n                field,\n                form,\n                meta\n              } = _ref;\n              const inputClasses = cx(styles.registr_input, {\n                [styles.invalid]: meta.error && meta.touched\n              });\n              return /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n                className: inputClasses,\n                placeholder: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\",\n            component: \"div\",\n            className: styles.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.login,\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"login\",\n            children: _ref2 => {\n              let {\n                field,\n                form,\n                meta\n              } = _ref2;\n              const inputClasses = cx(styles.registr_input, {\n                [styles.invalid]: meta.error && meta.touched\n              });\n              return /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n                className: inputClasses,\n                placeholder: \"login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"login\",\n            component: \"div\",\n            className: styles.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.password,\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"password\",\n            children: _ref3 => {\n              let {\n                field,\n                form,\n                meta\n              } = _ref3;\n              const inputClasses = cx(styles.registr_input, {\n                [styles.invalid]: meta.error && meta.touched\n              });\n              return /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n                className: inputClasses,\n                placeholder: \"password\",\n                type: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            component: \"div\",\n            className: styles.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlerPick,\n          className: styles.file_picker,\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(AutoAwesomeMotionIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"avatar\",\n          ref: filePicker,\n          className: styles.hidden,\n          onChange: e => formikProps.setFieldValue(\"avatar\", e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: styles.submit,\n          value: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserFormEdit, \"/ICCwmVsY2UsTosw8ToPOft4S9M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = UserFormEdit;\nexport default UserFormEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserFormEdit\");","map":{"version":3,"names":["React","useRef","Formik","Form","Field","ErrorMessage","useDispatch","createUserRequest","AutoAwesomeMotionIcon","Yup","cx","styles","UserFormEdit","dispatch","filePicker","onSubmit","values","formikBag","resetForm","handlerPick","current","click","validationShemas","object","login","string","required","password","name","modal_container","avatar","formikProps","form","field","meta","inputClasses","registr_input","invalid","error","touched","file_picker","hidden","e","setFieldValue","target","files","submit"],"sources":["/home/oem/Todo1/client/src/components/forms/UserFormEdit/index.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { createUserRequest } from \"../../../actions/usersCreators\";\nimport AutoAwesomeMotionIcon from \"@mui/icons-material/AutoAwesomeMotion\";\nimport * as Yup from \"yup\";\nimport cx from \"classnames\";\nimport styles from \"./UserFormEdit.module.scss\";\n\nconst UserFormEdit = () => {\n  const dispatch = useDispatch();\n\n  const filePicker = useRef(null);\n\n  const onSubmit = (values, formikBag) => {\n    dispatch(createUserRequest(values));\n    formikBag.resetForm();\n  };\n\n  const handlerPick = () => filePicker.current.click();\n\n  const validationShemas = Yup.object({\n    login: Yup.string().required(\"Must be required\"),\n    password: Yup.string().required(\"Must be required\"),\n    name: Yup.string().required(\"Must be required\"),\n  });\n\n  return (\n    <div className={styles.modal_container}>\n      <div>\n        \n      </div>\n      <Formik\n        initialValues={{\n          login: \"\",\n          name: \"\",\n          password: \"\",\n          avatar: \"\",\n        }}\n        validationSchema={validationShemas}\n        onSubmit={onSubmit}\n      >\n        {(formikProps) => (\n          <Form className={styles.form}>\n            <label className={styles.login}>\n              <Field name=\"name\">\n                {({ field, form, meta }) => {\n                  const inputClasses = cx(styles.registr_input, {\n                    [styles.invalid]: meta.error && meta.touched,\n                  });\n                  return (\n                    <input\n                      {...field}\n                      className={inputClasses}\n                      placeholder=\"name\"\n                    />\n                  );\n                }}\n              </Field>\n              <ErrorMessage\n                name=\"name\"\n                component=\"div\"\n                className={styles.error}\n              />\n            </label>\n            <label className={styles.login}>\n              <Field name=\"login\">\n                {({ field, form, meta }) => {\n                  const inputClasses = cx(styles.registr_input, {\n                    [styles.invalid]: meta.error && meta.touched,\n                  });\n                  return (\n                    <input\n                      {...field}\n                      className={inputClasses}\n                      placeholder=\"login\"\n                    />\n                  );\n                }}\n              </Field>\n              <ErrorMessage\n                name=\"login\"\n                component=\"div\"\n                className={styles.error}\n              />\n            </label>\n            <label className={styles.password}>\n              <Field name=\"password\">\n                {({ field, form, meta }) => {\n                  const inputClasses = cx(styles.registr_input, {\n                    [styles.invalid]: meta.error && meta.touched,\n                  });\n                  return (\n                    <input\n                      {...field}\n                      className={inputClasses}\n                      placeholder=\"password\"\n                      type=\"password\"\n                    />\n                  );\n                }}\n              </Field>\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className={styles.error}\n              />\n            </label>\n\n            <button\n              onClick={handlerPick}\n              className={styles.file_picker}\n              type=\"button\"\n            >\n              <AutoAwesomeMotionIcon />\n            </button>\n            <input\n              type=\"file\"\n              name=\"avatar\"\n              ref={filePicker}\n              className={styles.hidden}\n              onChange={(e) =>\n                formikProps.setFieldValue(\"avatar\", e.target.files[0])\n              }\n            />\n            <input type=\"submit\" className={styles.submit} value=\"Next\" />\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default UserFormEdit;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}